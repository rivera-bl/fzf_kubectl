#!/bin/sh

#####################
### ENTRY
#####################

function _fzf_kubectl_entry_pod() {
  FZF_DEFAULT_COMMAND="kubectl get pod --all-namespaces" \
  fzf \
    --multi \
    --height 99% \
    --header-lines=1 \
    --info=inline \
    --layout=reverse \
    --prompt "$(kubectl config current-context | sed 's/-cluster$//')> " \
      --bind 'enter:execute(sh fzf_kubectl _fzf_kubectl_pod_exec {1} {2})+abort' \
      --bind 'ctrl-f:execute(sh fzf_kubectl _fzf_kubectl_pod_logs {1} {2})+abort' \
      --bind 'ctrl-r:execute(sh fzf_kubectl _fzf_kubectl_pod_restart_deploy {1} {2})+reload(kubectl get pod -A)' \
      --bind 'ctrl-d:execute-multi(sh fzf_kubectl _fzf_kubectl_pod_delete {1} {2})+reload(kubectl get pod -A)' \
        --bind 'ctrl-v:change-preview(sh fzf_kubectl _fzf_kubectl_preview_events {1},{2})' \
        --bind 'ctrl-s:change-preview(sh fzf_kubectl _fzf_kubectl_preview_describe {1},{2})' \
        --bind 'ctrl-l:change-preview(sh fzf_kubectl _fzf_kubectl_preview_logs {1},{2})' \
        --bind '?:preview(sh fzf_kubectl _fzf_kubectl_help_pod)' \
        --bind '!:reload(kubectl get pod -A)' \
    --preview-window right,60%
}

#####################
### ACTION
#####################

# TODO fix errors related to execute-multi
# --bind 'ctrl-d:execute-multi(kubectl delete pod --namespace {1} {2} --force)+reload(kubectl get pod --all-namespaces)+abort' \
function _fzf_kubectl_pod_delete(){
  kubectl delete pod -n $@ --force
  sleep 10s
}

function _fzf_kubectl_pod_exec(){
  kubectl exec -it --namespace $@ -- bash || kubectl exec -it --namespace $@ -- sh
}

function _fzf_kubectl_pod_restart_deploy(){
  kubectl rollout restart deployment --namespace $1 $(echo $2 | rev | cut -f3- -d '-' | rev)
}

function _fzf_kubectl_pod_logs(){
  DEPLOYMENT_NAME=$(kubectl get pod --namespace $@ -o json | jq -r ".metadata.ownerReferences[].name")
  tmux setenv FZF_KUBECTL_STERN $DEPLOYMENT_NAME
  tmux send-keys "stern $(tmux showenv | grep '^FZF_KUBECTL_STERN'| awk -F '=' '{print $2}') -n $1" Enter
}

#####################
### PREVIEW
#####################

# TODO fix formatting of column items
# awk '{\$4=\"\"; \$5 = \"\t\" \$5; \$1 = \"\t\" \$1; \$2 = \"\t\" \$2; \$3 = \"\t\" \$3; print \$0;}'
function _fzf_kubectl_preview_events(){
  first=($(awk -F ',' '{print $1}' <<< $@))
  second=($(awk -F ',' '{print $2}' <<< $@))
  kubectl get event --namespace $first --field-selector involvedObject.name=$second | \
    sed -e "1s/LAST SEEN/SEEN/" | \
    sed "1{H;1h;\$!d;\${g;q;};};\$G" | \
    tac | bat --plain --color=always -l fstab
}

function _fzf_kubectl_preview_describe(){
  IFS=',' read -r -a array <<< "$@"
  kubectl describe pod "${array[1]}" --namespace "${array[0]}" | \
    bat --color=always -l yaml
}

function _fzf_kubectl_preview_logs(){
  IFS=',' read -r -a array <<< "$@"
  kubectl logs --all-containers --tail=10000 --namespace ${array[0]} ${array[1]} | \
    tac
}

#####################
### HELPERS
#####################

# TODO make this easier to write
function _fzf_kubectl_help_pod(){
  echo '
    { "actions": 
      { 
        "ctrl-f": "logs -f", 
        "ctrl-r": "rollout restart", 
        "ctrl-d": "delete pod" 
      }, 
    "preview": 
      { 
        "ctrl-v": "get event", 
        "ctrl-s": "describe pod", 
        "ctrl-l": "logs -f"
      },
    "!": "reload"
    }' | jq '.' | \
    bat --plain --color=always -l json
}

$@
